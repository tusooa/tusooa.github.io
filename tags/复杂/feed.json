{
    "version": "https://jsonfeed.org/version/1",
    "title": "何事西风不待人 • All posts by \"复杂\" tag",
    "description": "A poet, painter, and programmer.",
    "home_page_url": "http://tusooa.github.io",
    "items": [
        {
            "id": "http://tusooa.github.io/2018/04/29/short-code/",
            "url": "http://tusooa.github.io/2018/04/29/short-code/",
            "title": "短代码(一个马后炮)",
            "date_published": "2018-04-29T10:58:57.000Z",
            "content_html": "<p>没赶上报名截止日期，一直 <code>not invited</code>。就很难过。</p>\n<p>E 的题目描述是这样的。</p>\n<h1 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h1><p>tz学姐做题很忙，有一些简单的问题需要你帮忙解决：给定三个序列A,B,C和一个整数X, 现在需要找到三个数Ai，Bj，Ck，满足Ai+Bj+Ck = X.</p>\n<h1 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h1><p>第1行三个整数 L, N, M；</p>\n<p>第2行L个整数代表序列A</p>\n<p>第3行M个整数代表序列B</p>\n<p>第4行N个整数代表序列C</p>\n<p>第5行1个整数S代表有S个X。</p>\n<p>接下来的S行每行一个整数X</p>\n<p>1&lt;=L, N, M&lt;=500, 1&lt;=S&lt;=1000. 所有整数均在32位整数范围内</p>\n<h1 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h1><p>对于S个询问计算X对应的公式是否能被满足。 如能满足，输出 “YES”, 否则输出 “NO”。</p>\n<h1 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 3 3</span><br><span class=\"line\">1 2 3</span><br><span class=\"line\">1 2 3</span><br><span class=\"line\">1 2 3</span><br><span class=\"line\">3</span><br><span class=\"line\">1</span><br><span class=\"line\">4</span><br><span class=\"line\">10</span><br></pre></td></tr></table></figure>\n<h1 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NO</span><br><span class=\"line\">YES</span><br><span class=\"line\">NO</span><br></pre></td></tr></table></figure>\n<h1 id=\"喵\"><a href=\"#喵\" class=\"headerlink\" title=\"喵\"></a>喵</h1><p>我当时给出的代码是这样的。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> l,m,n;</span><br><span class=\"line\">  <span class=\"built_in\">cin</span>&gt;&gt;l&gt;&gt;m&gt;&gt;n;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> a[l],b[m],c[n];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>&amp;p:a)<span class=\"built_in\">cin</span>&gt;&gt;p;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>&amp;p:b)<span class=\"built_in\">cin</span>&gt;&gt;p;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>&amp;p:c)<span class=\"built_in\">cin</span>&gt;&gt;p;</span><br><span class=\"line\">  sort(c,c+n);</span><br><span class=\"line\">  <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p;<span class=\"built_in\">cin</span>&gt;&gt;p;)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> q:a)</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> r:b)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(binary_search(c,c+n,p-q-r)) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;YES\\n&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> l;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO\\n&quot;</span>;</span><br><span class=\"line\">  l:<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//292</span></span><br></pre></td></tr></table></figure>\n<p>由于我不能提交，无法判断它是否超时了。查了一下网上的做法，是把 <code>a</code> 和 <code>b</code> 加起来存到另一个数组里，然后对这个新的数组排序查找。</p>\n<p>仔细分析一下就是：</p>\n<p>我的方法，排序用了 <code>O(n*log n)</code>，查找 <code>O(n**2*log n)</code>。</p>\n<p>另一个做法，排序 <code>O(n**2*log n)</code>，查找 <code>O(n*log n)</code>。</p>\n<p>看上去好像正好抵消了没什么区别。问题在于查找是<strong>多次</strong>查找，我们希望每次查找的时间尽量短。</p>\n<p>所以改过的代码是这样的：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> l,m,n,r=<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">cin</span>&gt;&gt;l&gt;&gt;m&gt;&gt;n;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> a[l],b[m],c[n],S[l*m]; <span class=\"comment\">// GNU 扩展的变长数组</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>&amp;p:a)<span class=\"built_in\">cin</span>&gt;&gt;p;</span><br><span class=\"line\">  <span class=\"comment\">// range-for 输入第二组数据，同时将输入的数据和第一组的每一个数字相累加，结果存到 `S` 里。</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>&amp;p:b) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;p;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>&amp;q:a)S[r++]=p+q;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span>&amp;p:c)<span class=\"built_in\">cin</span>&gt;&gt;p;</span><br><span class=\"line\">  sort(S,S+r);</span><br><span class=\"line\">  <span class=\"built_in\">cin</span>&gt;&gt;n; <span class=\"comment\">// 丢弃个数信息，因为不需要</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p;<span class=\"built_in\">cin</span>&gt;&gt;p;)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> q:c)</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(binary_search(S,S+r,p-q))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;YES&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> l; <span class=\"comment\">// 直接跳到下次输入，不输出 NO</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;NO&quot;</span>);</span><br><span class=\"line\">  l:<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//311</span></span><br></pre></td></tr></table></figure>\n<p>排名表上最短是345。</p>\n<p>但是有什么用呢。我又不能提交(以后一定要提前关注一下)。</p>\n",
            "tags": [
                "无奈",
                "坑",
                "复杂"
            ]
        }
    ]
}